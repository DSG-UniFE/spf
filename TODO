Mauro
- finish implementation of first performance/benchmark spec
- implement parsing of dissemination policy in Application
- implement PIGConfiguration class
- handle Configuration.reset upon REPROGRAM

Marco
- calculate GPS distance (SPF::Gateway::GPS)
- raw data finding (Ã  la libmagic) in *PipelineStrategy.interested_in?
  (to keep track of mapping data_type -> interested pipelines)

Alessandro
- implement dissemination of results in SPF::Gateway::Application
- check thread safety of SPF::Gateway::Pipeline class
- check thread safety of SPF::Gateway::ServiceManager deactivate_service() method

ALL
- Find a way to access PIG GPS location (perhaps put it in ServiceManager?)
- Find a way to increase service validity time
- How to deal with reprogram in ConfigurationAgent
- ServiceManager should be a Singleton
- Check if it is worth to make the PIGConfiguration class a Singleton, too
- SPF::Common::ConfigurationAgent new_service_request() method should bring up
  any down service upon reception of a request for that service
- fix @active_pipelines[svc.pipeline] in ServiceManager::activate_service
  (Service class has no attribute named pipeline)
